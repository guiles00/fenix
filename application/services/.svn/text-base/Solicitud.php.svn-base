<?php
/**
 *
 * @author guiles
 * @param: Objeto Poliza, Datos del POST
 */
class Services_Solicitud
{

	public function saveSolicitudAutomotor($solicitud,$params){
		$tipo_poliza = Domain_TipoPoliza::getIdByName('AUTOMOTORES');
		$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
		//Tipo poliza Automotor => id = 7
		try {
			//1. Poliza Detalle Automotor
			$m_poliza_detalle = $solicitud->getModelDetallePoliza($tipo_poliza);
			$m_poliza_detalle->tipo_vehiculo_id =$params['tipo_vehiculo_id'];
			$m_poliza_detalle->tipo_cobertura_id =$params['tipo_cobertura_id'];
			$m_poliza_detalle->anio =$params['anio_automotor'];
			$m_poliza_detalle->marca=$params['marca_automotor'];
			$m_poliza_detalle->tipo=$params['tipo_automotor'];
			$m_poliza_detalle->modelo=$params['modelo_automotor'];
			$m_poliza_detalle->color=$params['color_automotor'];
			$m_poliza_detalle->patente=$params['patente_automotor'];
			$m_poliza_detalle->cilindrada_id=$params['cilindrada_automotor'];
			$m_poliza_detalle->serial_carroceria=$params['serial_c_automotor'];
			$m_poliza_detalle->serial_motor=$params['serial_automotor'];
			$m_poliza_detalle->uso_vehiculo=$params['uso_automotor'];
			$m_poliza_detalle->capacidad_id=$params['capacidad_automotor'];
			$m_poliza_detalle->pasajeros_id=$params['pasajeros_automotor'];
			$m_poliza_detalle->flota_id=$params['flota_automotor'];
			$m_poliza_detalle->fecha_titulo=$params['fecha_titulo_automotor'];
			$m_poliza_detalle->titular=$params['titular_automotor'];
			$m_poliza_detalle->numero_certificado=$params['numero_certificado_automotor'];
			$m_poliza_detalle->estado_luces_id=$params['estado_luces_automotor'];
			$m_poliza_detalle->accesorios=$params['accesorios_automotor'];
			$m_poliza_detalle->estado_motor_id=$params['estado_motor_automotor'];
			$m_poliza_detalle->estado_carroceria_id=$params['estado_carroceria_automotor'];
			$m_poliza_detalle->tipo_combustion_id=$params['tipo_combustion_automotor'];
			$m_poliza_detalle->acreedor_prendario=$params['acreedor_prendario_automotor'];
			$m_poliza_detalle->estado_vehiculo_id=$params['estado_vehiculo_automotor'];
			$m_poliza_detalle->estado_cubiertas_id=$params['estado_cubiertas_automotor'];
			$m_poliza_detalle->otros=$params['otros_automotor'];
			$m_poliza_detalle->sistema_seguridad_id=$params['sistema_seguridad_automotor'];

			$m_poliza_detalle->save();
		} catch (Exception $e) {
			echo $e->getMessage();
		}

		/*
		 * 2- Poliza Valores
		 */
		try{
			$m_poliza_valores = $solicitud->getModelPolizaValores();
			$m_poliza_valores->monto_asegurado=$params['monto_asegurado'];
			$m_poliza_valores->moneda_id=$params['moneda_id'];
			$m_poliza_valores->iva=$params['iva'];
			$m_poliza_valores->prima_comision=$params['prima_comision'];
			$m_poliza_valores->prima_tarifa=$params['prima_tarifa'];
			$m_poliza_valores->premio_compania=$params['premio_compania'];
			$m_poliza_valores->premio_asegurado=$params['premio_asegurado'];
			$m_poliza_valores->plus=$params['plus'];
			$m_poliza_valores->save();
		}catch (Exception $e) {
			echo $e->getMessage();
		}

		try {

			$fecha_vigencia_hasta = $this->calcularPeriodo($params['fecha_vigencia'], $params['periodo_id']);

			$m_solicitud = $solicitud->getModelPoliza();
				
				
			if(empty($m_solicitud->poliza_id)){
				//Si es nueva traigo numero para actualizar y guardo
				$talonario = Domain_Talonario::getInstance();
				 
				$numero_solicitud = $talonario->getNumeroByCodigo('SOLICITUD');
				//Guardo Numero de Solicitud
				$m_solicitud->numero_solicitud = $numero_solicitud ;
					
				//actualiza numero de solicitud

				$talonario->incrementaNumeroByCodigo('SOLICITUD');

			}
				
			$m_solicitud->asegurado_id=$params['asegurado_id'];
			$m_solicitud->agente_id=$params['agente_id'];
			$m_solicitud->compania_id=$params['compania_id'];
			$m_solicitud->productor_id=$params['productor_id'];
			$m_solicitud->cobrador_id=$params['cobrador_id'];
			$m_solicitud->fecha_pedido=$params['fecha_pedido'];
			$m_solicitud->periodo_id=$params['periodo_id'];
			$m_solicitud->fecha_vigencia=$params['fecha_vigencia'];
			$m_solicitud->fecha_vigencia_hasta=$fecha_vigencia_hasta;
			$m_solicitud->observaciones_asegurado=$params['observaciones_asegurado'];
			$m_solicitud->observaciones_compania=$params['observaciones_compania'];
			$m_solicitud->tipo_poliza_id = $tipo_poliza; //Tipo poliza Automotor
			$m_solicitud->endoso = 0; //siempre tiene endoso 0 la solicitud o primer poliza
			$m_solicitud->estado_id = $estado;



			//Guarda el ID de las tablas asociadas
			$m_solicitud->poliza_valores_id = $m_poliza_valores->poliza_valores_id;
			$m_solicitud->poliza_detalle_id = $m_poliza_detalle->detalle_automotor_id;
			$m_solicitud->save();


		} catch (Exception $e) {
			echo $e->getMessage();
		}
		return $solicitud;
	}


	public function saveSolicitudCaucion($solicitud,$params){
		$tipo_poliza = Domain_TipoPoliza::getIdByName('CAUCION');
		$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
		//Tipo Caucion (id = 1 )
		try {
			//1. Poliza Detalle Seguro Comun (Ver si es para Caucion solamente)
			$m_poliza_detalle = $solicitud->getModelDetallePoliza($tipo_poliza);
			$m_poliza_detalle->domicilio_riesgo ='Domicilio';

			$m_poliza_detalle->save();
		} catch (Exception $e) {
			echo $e->getMessage();
		}

		/*
		 * 2- Poliza Valores
		 */
		try{
			$m_poliza_valores = $solicitud->getModelPolizaValores();
			$m_poliza_valores->monto_asegurado=$params['monto_asegurado'];
			$m_poliza_valores->moneda_id=$params['moneda_id'];
			$m_poliza_valores->iva=$params['iva'];
			$m_poliza_valores->prima_comision=$params['prima_comision'];
			$m_poliza_valores->prima_tarifa=$params['prima_tarifa'];
			$m_poliza_valores->premio_compania=$params['premio_compania'];
			$m_poliza_valores->premio_asegurado=$params['premio_asegurado'];
			$m_poliza_valores->plus=$params['plus'];
			$m_poliza_valores->save();
		}catch (Exception $e) {
			echo $e->getMessage();
		}

		try {

			$fecha_vigencia_hasta = $this->calcularPeriodo($params['fecha_vigencia'], $params['periodo_id']);

			$m_solicitud = $solicitud->getModelPoliza();
			$m_solicitud->asegurado_id=$params['asegurado_id'];
			$m_solicitud->agente_id=$params['agente_id'];
			$m_solicitud->compania_id=$params['compania_id'];
			$m_solicitud->productor_id=$params['productor_id'];
			$m_solicitud->cobrador_id=$params['cobrador_id'];
			$m_solicitud->fecha_pedido=$params['fecha_pedido'];
			$m_solicitud->periodo_id=$params['periodo_id'];
			$m_solicitud->fecha_vigencia=$params['fecha_vigencia'];
			$m_solicitud->fecha_vigencia_hasta=$fecha_vigencia_hasta;
			$m_solicitud->observaciones_asegurado=$params['observaciones_asegurado'];
			$m_solicitud->observaciones_compania=$params['observaciones_compania'];
			$m_solicitud->tipo_poliza_id = $tipo_poliza; //Es del tipo caucion
			$m_solicitud->endoso = 0; //siempre tiene endoso 0 la solicitud o primer poliza
			$m_solicitud->estado_id = $estado;


			//Guarda el ID de las tablas asociadas
			$m_solicitud->poliza_valores_id = $m_poliza_valores->poliza_valores_id;
			$m_solicitud->poliza_detalle_id = $m_poliza_detalle->detalle_caucion_id;
			$m_solicitud->save();
			//Guardo Numero de Solicitud
			$m_solicitud->numero_solicitud = $m_solicitud->poliza_id ;
			$m_solicitud->save();

		} catch (Exception $e) {
			echo $e->getMessage();
		}
		return $solicitud;
	}


	public function saveSolicitudAduaneros($solicitud,$params){


			
			
		//Tipo Aduaneros (id = 2 )
		$tipo_poliza = Domain_TipoPoliza::getIdByName('ADUANEROS');
		//$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
		try {
			//1. Poliza Detalle Seguro Comun (Ver si es para Caucion solamente)
			$m_poliza_detalle = $solicitud->getModelDetallePoliza($tipo_poliza);
			$m_poliza_detalle->tipo_garantia_id=$params['tipo_garantia_id'];
			$m_poliza_detalle->motivo_garantia_id=$params['motivo_garantia_id'];
			$m_poliza_detalle->despachante_aduana_id=$params['despachante_aduana_id'];
			$m_poliza_detalle->beneficiario_id=$params['beneficiario_id'];
			$m_poliza_detalle->domicilio_riesgo=$params['domicilio_riesgo'];
			$m_poliza_detalle->localidad_riesgo=$params['localidad_riesgo'];
			$m_poliza_detalle->provincia_riesgo=$params['provincia_riesgo'];
			$m_poliza_detalle->acreedor_prendario=$params['acreedor_prendario'];
			$m_poliza_detalle->mercaderia=$params['mercaderia'];
			$m_poliza_detalle->descripcion_adicional=$params['descripcion_adicional'];
			$m_poliza_detalle->bl=$params['bl'];
			$m_poliza_detalle->factura=$params['factura'];
			$m_poliza_detalle->sim=$params['sim'];



			$m_poliza_detalle->save();
		} catch (Exception $e) {
			echo $e->getMessage();
		}

		/*
		 * 2- Poliza Valores
		 */
		try{
			$m_poliza_valores = $solicitud->getModelPolizaValores();
			$m_poliza_valores->monto_asegurado=$params['monto_asegurado'];
			$m_poliza_valores->moneda_id=$params['moneda_id'];
			$m_poliza_valores->iva=$params['iva'];
			$m_poliza_valores->prima_comision=$params['prima'];
			$m_poliza_valores->prima_tarifa=$params['prima_tarifa'];
			$m_poliza_valores->premio_compania=$params['premio_compania'];
			$m_poliza_valores->premio_asegurado=$params['premio_asegurado'];
			$m_poliza_valores->plus=$params['plus'];
			$m_poliza_valores->save();
		}catch (Exception $e) {
			echo $e->getMessage();
		}

		try {

			$fecha_vigencia_hasta = $this->calcularPeriodo($params['fecha_vigencia'], $params['periodo_id']);
			$m_solicitud = $solicitud->getModelPoliza();

			if(empty($m_solicitud->poliza_id)){
				$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
				//Si es nueva traigo numero para actualizar y guardo
				$talonario = Domain_Talonario::getInstance();
					
				$numero_solicitud = $talonario->getNumeroByCodigo('SOLICITUD');
				//Guardo Numero de Solicitud
				$m_solicitud->numero_solicitud = $numero_solicitud ;
				$m_solicitud->estado_id = $estado;	
				//actualiza numero de solicitud

				$talonario->incrementaNumeroByCodigo('SOLICITUD');

			}

			$m_solicitud->asegurado_id=$params['asegurado_id'];
			$m_solicitud->agente_id=$params['agente_id'];
			$m_solicitud->compania_id=$params['compania_id'];
			$m_solicitud->productor_id=$params['productor_id'];
			$m_solicitud->cobrador_id=$params['cobrador_id'];
			$m_solicitud->fecha_pedido=$params['fecha_pedido'];
			$m_solicitud->periodo_id=$params['periodo_id'];
			$m_solicitud->fecha_vigencia=$params['fecha_vigencia'];
			$m_solicitud->fecha_vigencia_hasta=$fecha_vigencia_hasta;
			$m_solicitud->observaciones_asegurado=$params['observaciones_asegurado'];
			$m_solicitud->observaciones_compania=$params['observaciones_compania'];
			$m_solicitud->tipo_poliza_id = $tipo_poliza; //Es del tipo Aduaneros
			//$m_solicitud->estado_id = $estado;
			$m_solicitud->endoso = 0;
			//Guarda el ID de las tablas asociadas
			$m_solicitud->poliza_valores_id = $m_poliza_valores->poliza_valores_id;
			$m_solicitud->poliza_detalle_id = $m_poliza_detalle->detalle_aduaneros_id;
			$m_solicitud->save();


		} catch (Exception $e) {
			echo $e->getMessage();
		}


		return $solicitud;
	}


	public function saveSolicitudConstruccion($solicitud,$params){

		//Tipo Aduaneros (id = 4 )
		$tipo_poliza = Domain_TipoPoliza::getIdByName('CONSTRUCCION');
		//$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
		try {
			//1. Poliza Detalle Seguro Comun (Ver si es para Caucion solamente)
			$m_poliza_detalle = $solicitud->getModelDetallePoliza($tipo_poliza);
			$m_poliza_detalle->tipo_garantia_id=$params['tipo_garantia_id'];
			$m_poliza_detalle->motivo_garantia_id=$params['motivo_garantia_id'];
			$m_poliza_detalle->beneficiario_id=$params['beneficiario_id'];
			$m_poliza_detalle->domicilio_riesgo=$params['domicilio_riesgo'];
			$m_poliza_detalle->localidad_riesgo=$params['localidad_riesgo'];
			$m_poliza_detalle->provincia_riesgo=$params['provincia_riesgo'];
			$m_poliza_detalle->numero_licitacion=$params['numero_licitacion'];
			$m_poliza_detalle->obra=$params['obra'];
			$m_poliza_detalle->descripcion_adicional=$params['descripcion_adicional'];
			$m_poliza_detalle->expediente=$params['expediente'];
			$m_poliza_detalle->objeto=$params['objeto'];
			$m_poliza_detalle->apertura_licitacion=$params['apertura_licitacion'];
			$m_poliza_detalle->clausula_especial=$params['clausula_especial'];
			$m_poliza_detalle->certificaciones=$params['certificaciones'];


			$m_poliza_detalle->save();
		} catch (Exception $e) {
			echo $e->getMessage();
		}

		/*
		 * 2- Poliza Valores
		 */
		try{
			$m_poliza_valores = $solicitud->getModelPolizaValores();
			$m_poliza_valores->monto_asegurado=$params['monto_asegurado'];
			$m_poliza_valores->moneda_id=$params['moneda_id'];
			$m_poliza_valores->iva=$params['iva'];
			$m_poliza_valores->prima_comision=$params['prima'];
			$m_poliza_valores->prima_tarifa=$params['prima_tarifa'];
			$m_poliza_valores->premio_compania=$params['premio_compania'];
			$m_poliza_valores->premio_asegurado=$params['premio_asegurado'];
			$m_poliza_valores->plus=$params['plus'];
			$m_poliza_valores->save();
		}catch (Exception $e) {
			echo $e->getMessage();
		}

		try {

			$fecha_vigencia_hasta = $this->calcularPeriodo($params['fecha_vigencia'], $params['periodo_id']);
			$m_solicitud = $solicitud->getModelPoliza();


			if(empty($m_solicitud->poliza_id)){
				$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
				//Si es nueva traigo numero para actualizar y guardo
				$talonario = Domain_Talonario::getInstance();
					
				$numero_solicitud = $talonario->getNumeroByCodigo('SOLICITUD');
				//Guardo Numero de Solicitud
				$m_solicitud->numero_solicitud = $numero_solicitud ;
				$m_solicitud->estado_id = $estado;
				//actualiza numero de solicitud

				$talonario->incrementaNumeroByCodigo('SOLICITUD');

			}



			$m_solicitud->asegurado_id=$params['asegurado_id'];
			$m_solicitud->agente_id=$params['agente_id'];
			$m_solicitud->compania_id=$params['compania_id'];
			$m_solicitud->productor_id=$params['productor_id'];
			$m_solicitud->cobrador_id=$params['cobrador_id'];
			$m_solicitud->fecha_pedido=$params['fecha_pedido'];
			$m_solicitud->periodo_id=$params['periodo_id'];
			$m_solicitud->fecha_vigencia=$params['fecha_vigencia'];
			$m_solicitud->fecha_vigencia_hasta=$fecha_vigencia_hasta;
			$m_solicitud->observaciones_asegurado=$params['observaciones_asegurado'];
			$m_solicitud->observaciones_compania=$params['observaciones_compania'];
			$m_solicitud->tipo_poliza_id = $tipo_poliza; //Es del tipo Aduaneros
			
			$m_solicitud->endoso = 0;
			//Guarda el ID de las tablas asociadas
			$m_solicitud->poliza_valores_id = $m_poliza_valores->poliza_valores_id;
			$m_solicitud->poliza_detalle_id = $m_poliza_detalle->detalle_construccion_id;
			$m_solicitud->save();


		} catch (Exception $e) {
			echo $e->getMessage();
		}
		return $solicitud;
	}


	public function saveSolicitudAlquiler($solicitud,$params){

		//Tipo Aduaneros (id = 4 )
		$tipo_poliza = Domain_TipoPoliza::getIdByName('ALQUILER');
		//$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
		try {
			//1. Poliza Detalle Seguro Comun (Ver si es para Caucion solamente)
			$m_poliza_detalle = $solicitud->getModelDetallePoliza($tipo_poliza);
			$m_poliza_detalle->tipo_garantia_id=$params['tipo_garantia_id'];
			$m_poliza_detalle->motivo_garantia_id=$params['motivo_garantia_id'];
			$m_poliza_detalle->beneficiario_id=$params['beneficiario_id'];
			$m_poliza_detalle->domicilio_riesgo=$params['domicilio_riesgo'];
			$m_poliza_detalle->localidad_riesgo=$params['localidad_riesgo'];
			$m_poliza_detalle->provincia_riesgo=$params['provincia_riesgo'];
			//$m_poliza_detalle->obra=$params['obra'];
			$m_poliza_detalle->descripcion_adicional=$params['descripcion_adicional'];


			$m_poliza_detalle->save();
		} catch (Exception $e) {
			echo $e->getMessage();
		}

		/*
		 * 2- Poliza Valores
		 */
		try{
			$m_poliza_valores = $solicitud->getModelPolizaValores();
			$m_poliza_valores->monto_asegurado=$params['monto_asegurado'];
			$m_poliza_valores->moneda_id=$params['moneda_id'];
			$m_poliza_valores->iva=$params['iva'];
			$m_poliza_valores->prima_comision=$params['prima'];
			$m_poliza_valores->prima_tarifa=$params['prima_tarifa'];
			$m_poliza_valores->premio_compania=$params['premio_compania'];
			$m_poliza_valores->premio_asegurado=$params['premio_asegurado'];
			$m_poliza_valores->plus=$params['plus'];
			$m_poliza_valores->save();
		}catch (Exception $e) {
			echo $e->getMessage();
		}

		try {

			$fecha_vigencia_hasta = $this->calcularPeriodo($params['fecha_vigencia'], $params['periodo_id']);
			$m_solicitud = $solicitud->getModelPoliza();


			if(empty($m_solicitud->poliza_id)){
				$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
				//Si es nueva traigo numero para actualizar y guardo
				$talonario = Domain_Talonario::getInstance();
					
				$numero_solicitud = $talonario->getNumeroByCodigo('SOLICITUD');
				//Guardo Numero de Solicitud
				$m_solicitud->numero_solicitud = $numero_solicitud ;
				$m_solicitud->estado_id = $estado;	
				//actualiza numero de solicitud

				$talonario->incrementaNumeroByCodigo('SOLICITUD');

			}


			$m_solicitud->asegurado_id=$params['asegurado_id'];
			$m_solicitud->agente_id=$params['agente_id'];
			$m_solicitud->compania_id=$params['compania_id'];
			$m_solicitud->productor_id=$params['productor_id'];
			$m_solicitud->cobrador_id=$params['cobrador_id'];
			$m_solicitud->fecha_pedido=$params['fecha_pedido'];
			$m_solicitud->periodo_id=$params['periodo_id'];
			$m_solicitud->fecha_vigencia=$params['fecha_vigencia'];
			$m_solicitud->fecha_vigencia_hasta=$fecha_vigencia_hasta;
			$m_solicitud->observaciones_asegurado=$params['observaciones_asegurado'];
			$m_solicitud->observaciones_compania=$params['observaciones_compania'];
			$m_solicitud->tipo_poliza_id = $tipo_poliza; //Es del tipo Aduaneros
			
			$m_solicitud->endoso = 0;
			//Guarda el ID de las tablas asociadas
			$m_solicitud->poliza_valores_id = $m_poliza_valores->poliza_valores_id;
			$m_solicitud->poliza_detalle_id = $m_poliza_detalle->detalle_alquiler_id;
			$m_solicitud->save();

		} catch (Exception $e) {
			echo $e->getMessage();
		}
		return $solicitud;
	}

	
	
		public function saveSolicitudResponsabilidadCivil($solicitud,$params){


			
			
		//Tipo Aduaneros (id = 2 )
		$tipo_poliza = Domain_TipoPoliza::getIdByName('RESPONSABILIDAD_CIVIL');
		
		//$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
		echo "tipo poliza".$tipo_poliza."end tipo poliza";
		try {
			//1. Poliza Detalle Seguro Comun (Ver si es para Caucion solamente)
			$m_poliza_detalle = $solicitud->getModelDetallePoliza($tipo_poliza);
			$m_poliza_detalle->tipo_garantia_id=$params['tipo_garantia_id'];
			$m_poliza_detalle->motivo_garantia_id=$params['motivo_garantia_id'];
			$m_poliza_detalle->beneficiario_id=$params['beneficiario_id'];
			$m_poliza_detalle->domicilio_riesgo=$params['domicilio_riesgo'];
			$m_poliza_detalle->localidad_riesgo=$params['localidad_riesgo'];
			$m_poliza_detalle->provincia_riesgo=$params['provincia_riesgo'];
			$m_poliza_detalle->obra=$params['obra'];
			$m_poliza_detalle->expediente=$params['expediente'];
			$m_poliza_detalle->personal=$params['personal'];
			$m_poliza_detalle->presupuesto_oficial=$params['presupuesto_oficial'];
			$m_poliza_detalle->clausula_especial=$params['clausula_especial'];
			$m_poliza_detalle->descripcion_adicional=$params['descripcion_adicional'];

			$m_poliza_detalle->save();
		} catch (Exception $e) {
			echo $e->getMessage();
		}

		/*
		 * 2- Poliza Valores
		 */
		try{
			$m_poliza_valores = $solicitud->getModelPolizaValores();
			$m_poliza_valores->monto_asegurado=$params['monto_asegurado'];
			$m_poliza_valores->moneda_id=$params['moneda_id'];
			$m_poliza_valores->iva=$params['iva'];
			$m_poliza_valores->prima_comision=$params['prima'];
			$m_poliza_valores->prima_tarifa=$params['prima_tarifa'];
			$m_poliza_valores->premio_compania=$params['premio_compania'];
			$m_poliza_valores->premio_asegurado=$params['premio_asegurado'];
			$m_poliza_valores->plus=$params['plus'];
			$m_poliza_valores->save();
		}catch (Exception $e) {
			echo $e->getMessage();
		}

		try {

			$fecha_vigencia_hasta = $this->calcularPeriodo($params['fecha_vigencia'], $params['periodo_id']);
			$m_solicitud = $solicitud->getModelPoliza();

			if(empty($m_solicitud->poliza_id)){
				$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
				//Si es nueva traigo numero para actualizar y guardo
				$talonario = Domain_Talonario::getInstance();
					
				$numero_solicitud = $talonario->getNumeroByCodigo('SOLICITUD');
				//Guardo Numero de Solicitud
				$m_solicitud->numero_solicitud = $numero_solicitud ;
				$m_solicitud->estado_id = $estado;	
				//actualiza numero de solicitud

				$talonario->incrementaNumeroByCodigo('SOLICITUD');

			}

			$m_solicitud->asegurado_id=$params['asegurado_id'];
			$m_solicitud->agente_id=$params['agente_id'];
			$m_solicitud->compania_id=$params['compania_id'];
			$m_solicitud->productor_id=$params['productor_id'];
			$m_solicitud->cobrador_id=$params['cobrador_id'];
			$m_solicitud->fecha_pedido=$params['fecha_pedido'];
			$m_solicitud->periodo_id=$params['periodo_id'];
			$m_solicitud->fecha_vigencia=$params['fecha_vigencia'];
			$m_solicitud->fecha_vigencia_hasta=$fecha_vigencia_hasta;
			$m_solicitud->observaciones_asegurado=$params['observaciones_asegurado'];
			$m_solicitud->observaciones_compania=$params['observaciones_compania'];
			$m_solicitud->tipo_poliza_id = $tipo_poliza; 
			//$m_solicitud->estado_id = $estado;
			$m_solicitud->endoso = 0;
			//Guarda el ID de las tablas asociadas
			$m_solicitud->poliza_valores_id = $m_poliza_valores->poliza_valores_id;
			$m_solicitud->poliza_detalle_id = $m_poliza_detalle->detalle_responsabilidad_civil_id;
			$m_solicitud->save();


		} catch (Exception $e) {
			echo $e->getMessage();
		}


		return $solicitud;
	}
	
	
	public function saveSolicitudTransporteMercaderia($solicitud,$params){

		$tipo_poliza = Domain_TipoPoliza::getIdByName('TRANSPORTE_MERCADERIA');
		
		//$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
		//echo "tipo poliza".$tipo_poliza."end tipo poliza";
		try {
			//1. Poliza Detalle Seguro Comun (Ver si es para Caucion solamente)
			$m_poliza_detalle = $solicitud->getModelDetallePoliza($tipo_poliza);
			
			$m_poliza_detalle->tipo_garantia_id=$params['tipo_garantia_id'];
			$m_poliza_detalle->motivo_garantia_id=$params['motivo_garantia_id'];
			$m_poliza_detalle->beneficiario_id=$params['beneficiario_id'];
			$m_poliza_detalle->descripcion_adicional=$params['descripcion_adicional'];

			$m_poliza_detalle->mercaderia=$params['mercaderia'];
			$m_poliza_detalle->transporte=$params['transporte'];
			$m_poliza_detalle->cuit_transportista=$params['cuit_transportista'];
			$m_poliza_detalle->origen_desde=$params['origen_desde'];
			$m_poliza_detalle->origen_hasta=$params['origen_hasta'];
			$m_poliza_detalle->tipo_transporte_id=$params['tipo_transporte_id'];
			$m_poliza_detalle->marca=$params['marca'];
			$m_poliza_detalle->modelo=$params['modelo'];
			$m_poliza_detalle->patente=$params['patente'];
			$m_poliza_detalle->patente_semi=$params['patente_semi'];
			
			$m_poliza_detalle->nombre_chofer=$params['nombre_chofer'];
			$m_poliza_detalle->documento_chofer=$params['documento_chofer'];
			$m_poliza_detalle->custodia_id=$params['custodia_id'];
			$m_poliza_detalle->datos_custodia=$params['datos_custodia'];
			$m_poliza_detalle->save();

		} catch (Exception $e) {
			echo $e->getMessage();
		}

		/*
		 * 2- Poliza Valores
		 */
		try{
			$m_poliza_valores = $solicitud->getModelPolizaValores();
			$m_poliza_valores->monto_asegurado=$params['monto_asegurado'];
			$m_poliza_valores->moneda_id=$params['moneda_id'];
			$m_poliza_valores->iva=$params['iva'];
			$m_poliza_valores->prima_comision=$params['prima'];
			$m_poliza_valores->prima_tarifa=$params['prima_tarifa'];
			$m_poliza_valores->premio_compania=$params['premio_compania'];
			$m_poliza_valores->premio_asegurado=$params['premio_asegurado'];
			$m_poliza_valores->plus=$params['plus'];
			$m_poliza_valores->save();
		}catch (Exception $e) {
			echo $e->getMessage();
		}

		try {

			$fecha_vigencia_hasta = $this->calcularPeriodo($params['fecha_vigencia'], $params['periodo_id']);
			$m_solicitud = $solicitud->getModelPoliza();

			if(empty($m_solicitud->poliza_id)){
				$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
				//Si es nueva traigo numero para actualizar y guardo
				$talonario = Domain_Talonario::getInstance();
					
				$numero_solicitud = $talonario->getNumeroByCodigo('SOLICITUD');
				//Guardo Numero de Solicitud
				$m_solicitud->numero_solicitud = $numero_solicitud ;
				$m_solicitud->estado_id = $estado;	
				//actualiza numero de solicitud

				$talonario->incrementaNumeroByCodigo('SOLICITUD');

			}

			$m_solicitud->asegurado_id=$params['asegurado_id'];
			$m_solicitud->agente_id=$params['agente_id'];
			$m_solicitud->compania_id=$params['compania_id'];
			$m_solicitud->productor_id=$params['productor_id'];
			$m_solicitud->cobrador_id=$params['cobrador_id'];
			$m_solicitud->fecha_pedido=$params['fecha_pedido'];
			$m_solicitud->periodo_id=$params['periodo_id'];
			$m_solicitud->fecha_vigencia=$params['fecha_vigencia'];
			$m_solicitud->fecha_vigencia_hasta=$fecha_vigencia_hasta;
			$m_solicitud->observaciones_asegurado=$params['observaciones_asegurado'];
			$m_solicitud->observaciones_compania=$params['observaciones_compania'];
			$m_solicitud->tipo_poliza_id = $tipo_poliza; 
			//$m_solicitud->estado_id = $estado;
			$m_solicitud->endoso = 0;
			//Guarda el ID de las tablas asociadas
			$m_solicitud->poliza_valores_id = $m_poliza_valores->poliza_valores_id;
			$m_solicitud->poliza_detalle_id = $m_poliza_detalle->detalle_transporte_mercaderia_id;
			$m_solicitud->save();


		} catch (Exception $e) {
			echo $e->getMessage();
		}


		return $solicitud;
	}
	
	
	
	
	
	public function saveSolicitudAccidentesPersonales($solicitud,$params){

		//Tipo Accidentes Personales (id = 3 )
		$tipo_poliza = Domain_TipoPoliza::getIdByName('ACCIDENTES_PERSONALES');
		$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');


		try {
			//1. Poliza Detalle Accidentes Personales
			$m_poliza_detalle = $solicitud->getModelDetallePoliza($tipo_poliza);
			$m_poliza_detalle->tipo_garantia_id=$params['tipo_garantia_id'];
			$m_poliza_detalle->motivo_garantia_id=$params['motivo_garantia_id'];
			$m_poliza_detalle->beneficiario_id=$params['beneficiario_id'];
			
			$m_poliza_detalle->cantidad_personas =$params['cantidad_personas'];
			$m_poliza_detalle->tareas_a_realizar =$params['tareas_a_realizar'];
			$m_poliza_detalle->altura_maxima =$params['altura_maxima'];
			$m_poliza_detalle->datos_adicionales =$params['datos_adicionales'];
			
			$m_poliza_detalle->save();
		} catch (Exception $e) {
			echo $e->getMessage();
		}

		/*
		 * 2- Poliza Valores
		 */
		try{
			$m_poliza_valores = $solicitud->getModelPolizaValores();
			$m_poliza_valores->monto_asegurado=$params['monto_asegurado'];
			$m_poliza_valores->moneda_id=$params['moneda_id'];
			$m_poliza_valores->iva=$params['iva'];
			$m_poliza_valores->prima_comision=$params['prima'];
			$m_poliza_valores->prima_tarifa=$params['prima_tarifa'];
			$m_poliza_valores->premio_compania=$params['premio_compania'];
			$m_poliza_valores->premio_asegurado=$params['premio_asegurado'];
			$m_poliza_valores->plus=$params['plus'];
			$m_poliza_valores->save();
		}catch (Exception $e) {
			echo $e->getMessage();
		}

		try {

			$fecha_vigencia_hasta = $this->calcularPeriodo($params['fecha_vigencia'], $params['periodo_id']);
			
			$m_solicitud = $solicitud->getModelPoliza();
			$m_solicitud->asegurado_id=$params['asegurado_id'];
			$m_solicitud->agente_id=$params['agente_id'];
			$m_solicitud->compania_id=$params['compania_id'];
			$m_solicitud->productor_id=$params['productor_id'];
			$m_solicitud->cobrador_id=$params['cobrador_id'];
			$m_solicitud->fecha_pedido=$params['fecha_pedido'];
			$m_solicitud->periodo_id=$params['periodo_id'];
		    $m_solicitud->fecha_vigencia=$params['fecha_vigencia'];
			$m_solicitud->fecha_vigencia_hasta=$fecha_vigencia_hasta;
			$m_solicitud->observaciones_asegurado=$params['observaciones_asegurado'];
			$m_solicitud->observaciones_compania=$params['observaciones_compania'];
			$m_solicitud->tipo_poliza_id = $tipo_poliza; //Es del tipo Acc. Personales
			$m_solicitud->estado_id = $estado;
			$m_solicitud->endoso = 0;
			//Guarda el ID de las tablas asociadas
			$m_solicitud->poliza_valores_id = $m_poliza_valores->poliza_valores_id;
			$m_solicitud->poliza_detalle_id = $m_poliza_detalle->detalle_accidentes_personales_id;
			$m_solicitud->save();
			//Guardo Numero de Solicitud
			$m_solicitud->numero_solicitud = $m_solicitud->poliza_id ;
			$m_solicitud->save();

		} catch (Exception $e) {
			echo $e->getMessage();
		}
		return $solicitud;
	}

public function saveSolicitudIgj($solicitud,$params){

		//Tipo Igj (id = 9 )
		$tipo_poliza = Domain_TipoPoliza::getIdByName('IGJ');
		//$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
		try {
			//1. Poliza Detalle Seguro Comun (Ver si es para Caucion solamente)
			$m_poliza_detalle = $solicitud->getModelDetallePoliza($tipo_poliza);
			$m_poliza_detalle->tipo_garantia_id=$params['tipo_garantia_id'];
			$m_poliza_detalle->motivo_garantia_id=$params['motivo_garantia_id'];
			$m_poliza_detalle->beneficiario_id=$params['beneficiario_id'];
			$m_poliza_detalle->domicilio_riesgo=$params['domicilio_riesgo'];
			$m_poliza_detalle->localidad_riesgo=$params['localidad_riesgo'];
			$m_poliza_detalle->provincia_riesgo=$params['provincia_riesgo'];
			$m_poliza_detalle->numero_licitacion=$params['numero_licitacion'];
			$m_poliza_detalle->obra=$params['obra'];
			$m_poliza_detalle->descripcion_adicional=$params['descripcion_adicional'];
			$m_poliza_detalle->expediente=$params['expediente'];
			$m_poliza_detalle->objeto=$params['objeto'];
			$m_poliza_detalle->apertura_licitacion=$params['apertura_licitacion'];
			$m_poliza_detalle->clausula_especial=$params['clausula_especial'];
			$m_poliza_detalle->certificaciones=$params['certificaciones'];


			$m_poliza_detalle->save();
		} catch (Exception $e) {
			echo $e->getMessage();
		}

		/*
		 * 2- Poliza Valores
		 */
		try{
			$m_poliza_valores = $solicitud->getModelPolizaValores();
			$m_poliza_valores->monto_asegurado=$params['monto_asegurado'];
			$m_poliza_valores->moneda_id=$params['moneda_id'];
			$m_poliza_valores->iva=$params['iva'];
			$m_poliza_valores->prima_comision=$params['prima'];
			$m_poliza_valores->prima_tarifa=$params['prima_tarifa'];
			$m_poliza_valores->premio_compania=$params['premio_compania'];
			$m_poliza_valores->premio_asegurado=$params['premio_asegurado'];
			$m_poliza_valores->plus=$params['plus'];
			$m_poliza_valores->save();
		}catch (Exception $e) {
			echo $e->getMessage();
		}

		try {

			$fecha_vigencia_hasta = $this->calcularPeriodo($params['fecha_vigencia'], $params['periodo_id']);
			$m_solicitud = $solicitud->getModelPoliza();


			if(empty($m_solicitud->poliza_id)){
				$estado = Domain_EstadoPoliza::getIdByCodigo('SOLICITUD_PENDIENTE');
				//Si es nueva traigo numero para actualizar y guardo
				$talonario = Domain_Talonario::getInstance();
					
				$numero_solicitud = $talonario->getNumeroByCodigo('SOLICITUD');
				//Guardo Numero de Solicitud
				$m_solicitud->numero_solicitud = $numero_solicitud ;
				$m_solicitud->estado_id = $estado;
				//actualiza numero de solicitud

				$talonario->incrementaNumeroByCodigo('SOLICITUD');

			}



			$m_solicitud->asegurado_id=$params['asegurado_id'];
			$m_solicitud->agente_id=$params['agente_id'];
			$m_solicitud->compania_id=$params['compania_id'];
			$m_solicitud->productor_id=$params['productor_id'];
			$m_solicitud->cobrador_id=$params['cobrador_id'];
			$m_solicitud->fecha_pedido=$params['fecha_pedido'];
			$m_solicitud->periodo_id=$params['periodo_id'];
			$m_solicitud->fecha_vigencia=$params['fecha_vigencia'];
			$m_solicitud->fecha_vigencia_hasta=$fecha_vigencia_hasta;
			$m_solicitud->observaciones_asegurado=$params['observaciones_asegurado'];
			$m_solicitud->observaciones_compania=$params['observaciones_compania'];
			$m_solicitud->tipo_poliza_id = $tipo_poliza; //Es del tipo Igj
			
			$m_solicitud->endoso = 0;
			//Guarda el ID de las tablas asociadas
			$m_solicitud->poliza_valores_id = $m_poliza_valores->poliza_valores_id;
			$m_solicitud->poliza_detalle_id = $m_poliza_detalle->detalle_igj_id;
			$m_solicitud->save();


		} catch (Exception $e) {
			echo $e->getMessage();
		}
		return $solicitud;
	}
	


//============================================================/
	public function saveDetallePago($solicitud,$params){

		$m_solicitud = $solicitud->getModelPoliza();

		//1. Borra los datos de pago
		Domain_DetallePago::deleteDetallePago($m_solicitud->poliza_id);

		echo "<pre>";
		//print_r($params);
		$fecha_vigencia = $m_solicitud->fecha_vigencia;


		try {

			//echo "Guarda la forma de pago Efectivo";
			//Guardo el tipo de pago
			$detalle_pago = new Model_DetallePago();
			$detalle_pago->forma_pago_id = $params['forma_pago_id'];
			$detalle_pago->moneda_id = $params['moneda_id'];
			$detalle_pago->save();
			//Guardo en la poliza el id para asociarlo

			$m_solicitud->detalle_pago_id = $detalle_pago->detalle_pago_id;
			$m_solicitud->save();
			//Guardo los valores de las cuotas
			//En este caso es una sola cuota porque es efectivo

			for ($i = 1; $i <= $params['cuotas']; $i++) {

				$detalle_pago_cuota = new Model_DetallePagoCuota();
				$detalle_pago_cuota->detalle_pago_id = $detalle_pago->detalle_pago_id;
				$detalle_pago_cuota->cuota_id=$i;
				$detalle_pago_cuota->importe=$params['valor_cuota'];
				$detalle_pago_cuota->fecha_cobro= $fecha_vigencia;
				$detalle_pago_cuota->save();
				//Agrego un mes a la fecha
				$fecha_vigencia = Domain_DetallePago::addMonthbyDate($fecha_vigencia);
				//echo"<br>";
				////print_r($fecha_vigencia);

			}

		} catch (Exception $e) {
			echo $e->getMessage();
		}

		//devuelvo la poliza actualizada
		return new Domain_Poliza($m_solicitud->poliza_id);
	}


	private function calcularPeriodo($fecha_desde,$periodo){

		if(empty($fecha_desde)) return false;
		$date = new DateTime($fecha_desde);

		switch ($periodo) {
			case '1':

				$date->add(new DateInterval('P1M'));
				$fecha_hasta =  $date->format('Y-m-d') . "\n";
				break;
			case '7':
				
			$date->add(new DateInterval('P2M'));
			$fecha_hasta =  $date->format('Y-m-d') . "\n";
			break;
			case '2':

				$date->add(new DateInterval('P3M'));
				$fecha_hasta =  $date->format('Y-m-d') . "\n";
				break;
					
			case '3':

				$date->add(new DateInterval('P4M'));
				$fecha_hasta =  $date->format('Y-m-d') . "\n";
				break;
					
			case '4':

				$date->add(new DateInterval('P6M'));
				$fecha_hasta =  $date->format('Y-m-d') . "\n";
				break;
					
			case '5':

				$date->add(new DateInterval('P1Y'));
				$fecha_hasta =  $date->format('Y-m-d') . "\n";
				break;
					
					
			case '6':

				$date->add(new DateInterval('P2Y'));
				//$fecha_hasta =  $date->format('Y-m-d') . "\n";
				$fecha_hasta =  $date->format('Y-m-d') . "\n";
				break;
			default:
				$fecha_hasta = null	;
				break;
		}


		return $fecha_hasta;
	}

}


