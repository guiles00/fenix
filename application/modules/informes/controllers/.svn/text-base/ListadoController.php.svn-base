<?php
/*
 *
 Cuando ingresas por default te muestra las operaciones del mes en curso y arriba tenés que dejar que se pueda elegir la fecha, y tambien que se pueda filtrar la operación (para el caso de caución): emisión / refacturación

 Te paso los datos que tienen que mostrarse en el listado:

 Fecha de Pedido
 Tomador
 Nº de Póliza
 Endoso
 Agente
 Riesgo
 Moneda
 Suma Asegurada
 Compañia
 Operación
 Premio Compañia
 Premio
 Plus
 Importe
 Fecha de Pago
 Cobrador
 Importe Cobrado

 *
 */

require_once ('IndexController.php');

class Informes_ListadoController extends Informes_IndexController
{
	private $_poliza = null;
	private $_sesion = null;
	private $_usuario = null;
	private $_t_usuario = null;


	public function init()
	{

		if ( ! (Zend_Auth::getInstance()->hasIdentity())  ) {

			$this->_helper->redirector('index','login','default');
		}

		$this->_helper->layout->disableLayout();
		$this->_poliza = new Domain_Poliza();
		$this->_sesion = Domain_Sesion::getInstance();
		$this->_usuario = $this->_sesion->getUsuario();
		$this->_t_usuario = $this->_usuario->getTipoUsuario();

		if( $this->_usuario->getAcl()->hasPermission('solicitud') ) {

			//exit('tiene permiso');
		} else {
			//exit('no tiene permiso');
		}
			
		//Esto es un asco tengo que modificarlo cuando tenga tiempo
		$this->view->isAgente = false;
		$this->view->isOperador = false;
		$this->view->isCliente = false;
		$rol_usuario = $this->_t_usuario->getNombre();
		if($rol_usuario=='AGENTE'){

			$this->view->isAgente = true;
			$this->view->agente_id = $this->_usuario->getModel()->usuario_tipo_id;
			$this->view->agente_nombre = Domain_Agente::getNameById($this->_usuario->getModel()->usuario_tipo_id);
			//print_r($this->view->agente_nombre);
		}elseif($rol_usuario=='OPERADOR'){

			$this->view->isOperador = true;
		}elseif($rol_usuario=='CLIENTE'){

			$this->view->isCliente = true;
		}

		$logger = Zend_Registry::get('logger');
		$logger->log($this->_usuario->getEntidad() , Zend_Log::INFO);
			
	}

	public function indexAction()
	{
		$this->_forward('list','listado','informes');

	}

	public function listAction()
	{

		$params = $this->_request->getParams();


		$this->view->buscar = true;

		if( !empty($params['fecha_desde']) ) {
			$fecha_desde  = $params['fecha_desde'];
			$fecha_hasta = $params['fecha_hasta'];
		}else{
			//saco el mes en curso(despues lo mejoro, por ahora resta 15)
			$date_desde = new DateTime();
			$date_desde->sub(new DateInterval('P15D'));
			$fecha_desde =  $date_desde->format('Y-m-d');

			$date_hasta = new DateTime();
			$date_hasta->add(new DateInterval('P15D'));
			$fecha_hasta =  $date_hasta->format('Y-m-d');
		}
			

		$rows = $this->_t_usuario->getPolizasInformeDiario($fecha_desde,$fecha_hasta);



			
		//Esto para despues
		/*
		$page=$this->_getParam('page',1);
			
		$paginator = Zend_Paginator::factory($rows);
		$paginator->setItemCountPerPage(10);
		$paginator->setCurrentPageNumber($page);
		$this->view->criterio = $params['criterio'];

		$this->view->rows = $paginator;
		*/

		$this->view->rows = $rows;
	}

	public function bkinformeDiarioAction()
	{

		$params = $this->_request->getParams();


		$this->view->buscar = true;

		if( !empty($params['fecha_desde']) ) {
			$fecha_desde  = $params['fecha_desde'];
			$fecha_hasta = $params['fecha_hasta'];
		}else{
			//saco el mes en curso(despues lo mejoro, por ahora resta 15)
			$date_desde = new DateTime();
			$date_desde->sub(new DateInterval('P15D'));
			$fecha_desde =  $date_desde->format('Y-m-d');

			$date_hasta = new DateTime();
			$date_hasta->add(new DateInterval('P15D'));
			$fecha_hasta =  $date_hasta->format('Y-m-d');
		}
			

		$rows = $this->_t_usuario->getPolizasInformeDiario($fecha_desde,$fecha_hasta);



			
		//Esto para despues
		/*
		$page=$this->_getParam('page',1);
			
		$paginator = Zend_Paginator::factory($rows);
		$paginator->setItemCountPerPage(10);
		$paginator->setCurrentPageNumber($page);
		$this->view->criterio = $params['criterio'];

		$this->view->rows = $paginator;
		*/

		$this->view->rows = $rows;
	}

	public function informeDiarioAction()
	{

		$params = $this->_request->getParams();
		
		echo "<pre>";
		print_r($params);
		$this->view->buscar = true;

		if( !empty($params['fecha_desde']) ) {
			$fecha_desde  = $params['fecha_desde'];
			$fecha_hasta = $params['fecha_hasta'];
			$operacion_id= $params['operacion_id'];
			
			$rows = $this->_t_usuario->getPolizasInformeDiarioRango($fecha_desde,$fecha_hasta,$operacion_id);
			//$parse_rows = $this->parseaInformeDiario($rows);
			//echo "---------------------------------------------";
			$this->view->fecha_desde = $fecha_desde;
			$this->view->fecha_hasta = $fecha_hasta;
		}else{
			$this->view->operacion = 1;

			//saco el mes en curso(despues lo mejoro, por ahora resta 15)
			/*	$date_desde = new DateTime();
			$date_desde->sub(new DateInterval('P15D'));
			$fecha_desde =  $date_desde->format('Y-m-d');

			$date_hasta = new DateTime();
			$date_hasta->add(new DateInterval('P15D'));
			$fecha_hasta =  $date_hasta->format('Y-m-d');
			*/
			$date_desde = new DateTime();
			//$date_desde->sub(new DateInterval('P15D'));
			$fecha_pedido =  $date_desde->format('Y-m-d');
			$rows = $this->_t_usuario->getPolizasInformeDiario($fecha_pedido);

			//echo "<pre>";
			//print_r($rows);
			//exit;
		}
			
		//Esto para despues
		/*
		$page=$this->_getParam('page',1);
			
		$paginator = Zend_Paginator::factory($rows);
		$paginator->setItemCountPerPage(10);
		$paginator->setCurrentPageNumber($page);
		$this->view->criterio = $params['criterio'];

		$this->view->rows = $paginator;
		*/

		$this->view->informe_diario = $rows;
	}

	public function imprimirInformeDiarioAction()
	{

		$params = $this->_request->getParams();


		$this->view->buscar = true;

		if( !empty($params['fecha_desde']) ) {
			$fecha_desde  = $params['fecha_desde'];
			$fecha_hasta = $params['fecha_hasta'];
		
			$this->view->fecha_desde = $params['fecha_desde'];
			$this->view->fecha_hasta = $params['fecha_hasta'];
			
			$rows = $this->_t_usuario->getPolizasInformeDiarioRango($fecha_desde,$fecha_hasta);

		}else{

			$date_desde = new DateTime();
			//$date_desde->sub(new DateInterval('P15D'));
			$fecha_pedido =  $date_desde->format('Y-m-d');
			$rows = $this->_t_usuario->getPolizasInformeDiario($fecha_pedido);
		}
			
		//Esto para despues
		/*
		$page=$this->_getParam('page',1);
			
		$paginator = Zend_Paginator::factory($rows);
		$paginator->setItemCountPerPage(10);
		$paginator->setCurrentPageNumber($page);
		$this->view->criterio = $params['criterio'];

		$this->view->rows = $paginator;
		*/

		$this->view->informe_diario = $rows;
	}


	private function parseaInformeDiario($rows){

		$array_temp = Array();

		foreach($rows as $key_poliza=>$value_poliza){

			if(is_array($value_poliza)){
				echo"entro a $value_poliza";
					
			}else{
				echo "guarda".$key_poliza. "con este valor".$value_poliza;
				echo "<br>";
			}


			//foreach ($value_poliza['Model_DetallePago'] as $key_detalle_pago=>$value_detalle_pago) {
			//	$array_temp[$key_detalle_pago]=$value_detalle_pago;
			//}
		}


		return $array_temp;
	}


	public function listadoProduccionAction()
	{

		$params = $this->_request->getParams();

		$this->view->buscar = false;

		if ($params['buscar']){
			$this->view->buscar = true;

			$rows = $this->_t_usuario->getPolizasListadoProduccionByMonth($params['mes'],$params['anio']);

			$imes = intval($params['mes']);
			$ianio = intval($params['anio']);

			$mes_pasado_timestamp = mktime(0, 0, 0, $imes-1, "01", $ianio);
			$mes_pasado =  date('d-m-Y',$mes_pasado_timestamp);

			$mes_actual_timestamp = mktime(0, 0, 0, $imes, "01", $ianio);
			$mes_actual =  date('d-m-Y',$mes_actual_timestamp);

			$this->view->mes_pasado = $mes_pasado;
			$this->view->mes_actual = $mes_actual;

			$this->view->mes = $params['mes'];
			$this->view->anio = $params['anio'];


		}
		//Esto para despues
		/*
		$page=$this->_getParam('page',1);
			
		$paginator = Zend_Paginator::factory($rows);
		$paginator->setItemCountPerPage(10);
		$paginator->setCurrentPageNumber($page);
		$this->view->criterio = $params['criterio'];

		$this->view->rows = $paginator;
		*/

		$this->view->rows = $rows;
	}

	public function imprimirListadoProduccionAction()
	{

		$params = $this->_request->getParams();



		$rows = $this->_t_usuario->getPolizasListadoProduccionByMonth($params['mes'],$params['anio']);
			
		$imes = intval($params['mes']);
		$ianio = intval($params['anio']);

		$mes_pasado_timestamp = mktime(0, 0, 0, $imes-1, "01", $ianio);
		$mes_pasado =  date('d-m-Y',$mes_pasado_timestamp);

		$mes_actual_timestamp = mktime(0, 0, 0, $imes, "01", $ianio);
		$mes_actual =  date('d-m-Y',$mes_actual_timestamp);

		$this->view->mes_pasado = $mes_pasado;
		$this->view->mes_actual = $mes_actual;

			
		$this->view->rows = $rows;
	}



	public function listarAseguradosAction(){

		$this->_helper->viewRenderer->setNoRender ();

		$asegurado= new Domain_Asegurado();
		$asegurados = $asegurado->getModel()->getTable()->findAll()->toArray();
		$asegurados_format = array();
		//le doy formato al array
		foreach($asegurados as $asegurado){
			$asegurados_format[$asegurado['nombre']]=$asegurado['asegurado_id'];
		}
		$params = $this->_request->getParams();
		$q = $params['q'];

		foreach ($asegurados_format as $key=>$value) {

			if (strpos(strtolower($key), $q) !== false) {
				echo "$key|$value\n";
			}

		}

	}

	public function listadoLibroOperacionesAction(){

		/*
		 * Fecha de solicitud / Tomador / Domicilio / Ubicación Riesgo / Compañia
		 * / Tipo de cobertura / Tipo de seguro (aca tenemos que ver si hace falta agregar algo)
		 *  / Suma asegurada / Vigencia del seguro / Observaciones
		 */

		$params = $this->_request->getParams();
		//echo"<pre>";
		//print_r($params);

		$this->view->buscar = false;

		$productor = new Domain_Productor();
		$this->view->productores= $productor->getModel()->getTable()->findAll()->toArray();



		if($params['buscar']){
			$this->view->numero_orden = $params['numero_inicio'];
			$this->view->anio = $params['anio'];
			$this->view->mes = $params['mes'];
			$this->view->buscar = true;
			$this->view->productor_id=$params['productor_id'];
			$listado_libro_operaciones = $this->_t_usuario->getListadoOperacionesByProductorIdAndMonth($params['productor_id'],$params['mes'],$params['anio']);
		}
		$this->view->listado_libro_operaciones = $listado_libro_operaciones;

	}


	public function listadoDeudaClienteAction(){

		/*
		 * Fecha de solicitud / Tomador / Domicilio / Ubicación Riesgo / Compañia
		 * / Tipo de cobertura / Tipo de seguro (aca tenemos que ver si hace falta agregar algo)
		 *  / Suma asegurada / Vigencia del seguro / Observaciones
		 */
		/*
		 * Busca siempre por cliente y despues puede ser por agente o compania
		 */
		$params = $this->_request->getParams();
		//echo"<pre>";
		//print_r($params);
		$this->view->asegurado_id=$params['asegurado_id'];
		//	print_r($this->view->asegurado_id);
		//exit;
		$this->view->buscar = false;

		$agente = new Domain_Agente();
		$this->view->agentes= $agente->getModel()->getTable()->findAll()->toArray();

		$compania = new Domain_Compania();
		$this->view->companias = $compania->getModel()->getTable()->findAll()->toArray();

		if($params['buscar']){
			$this->view->buscar = true;

			$this->view->compania_id=$params['compania_id'];
			$this->view->agente_id=$params['agente_id'];
			$this->view->asegurado_nombre = Domain_Asegurado::getNameById($params['asegurado_id']);
			
			$listado_deuda_cliente = $this->_t_usuario->getListadoDeudaClienteByEntidadId($params['asegurado_id'],$params['agente_id'],$params['compania_id']);
		}else{
			
			$this->view->asegurado_nombre = Domain_Asegurado::getNameById($params['asegurado_id']);
			$listado_deuda_cliente = $this->_t_usuario->getListadoDeudaCliente($params['asegurado_id']);
		}

		$this->view->listado_deuda_cliente = $listado_deuda_cliente;

	}

	public function listadoDeudaCompaniaAction(){

		/*
		 * Fecha de solicitud / Tomador / Domicilio / Ubicación Riesgo / Compañia
		 * / Tipo de cobertura / Tipo de seguro (aca tenemos que ver si hace falta agregar algo)
		 *  / Suma asegurada / Vigencia del seguro / Observaciones
		 */
		/*
		 * Busca siempre por cliente y despues puede ser por agente o compania
		 */
		$params = $this->_request->getParams();
		
		$this->view->compania_id=$params['compania_id'];
		//	print_r($this->view->asegurado_id);
		//echo "<pre>";
		//print_r($params);
		//exit;
		$this->view->buscar = false;

		$agente = new Domain_Agente();
		$this->view->agentes= $agente->getModel()->getTable()->findAll()->toArray();

		$asegurado = new Domain_Asegurado();
		$this->view->asegurados = $asegurado->getModel()->getTable()->findAll()->toArray();

		if($params['buscar']){
			$this->view->buscar = true;

			$this->view->asegurado_id=$params['asegurado_id'];
			$this->view->agente_id=$params['agente_id'];
			$this->view->compania_nombre = Domain_Compania::getNameById($params['compania_id']);
			
			$listado_deuda_compania = $this->_t_usuario->getListadoDeudaCompaniaByEntidadId($params['compania_id'],$params['agente_id'],$params['asegurado_id']);
		}else{
			$this->view->compania_nombre = Domain_Compania::getNameById($params['compania_id']);
			$listado_deuda_compania = $this->_t_usuario->getListadoDeudaCompania($params['compania_id']);
		}

		$this->view->listado_deuda_compania = $listado_deuda_compania;

	}
	
		public function imprimirListadoDeudaCompaniaAction(){

		/*
		 * Fecha de solicitud / Tomador / Domicilio / Ubicación Riesgo / Compañia
		 * / Tipo de cobertura / Tipo de seguro (aca tenemos que ver si hace falta agregar algo)
		 *  / Suma asegurada / Vigencia del seguro / Observaciones
		 */
		/*
		 * Busca siempre por cliente y despues puede ser por agente o compania
		 */
		$params = $this->_request->getParams();
		
		$this->view->compania_id=$params['compania_id'];
		//	print_r($this->view->asegurado_id);
		//echo "<pre>";
		//print_r($params);
		//exit;
		$this->view->buscar = false;

		$agente = new Domain_Agente();
		$this->view->agentes= $agente->getModel()->getTable()->findAll()->toArray();

		$asegurado = new Domain_Asegurado();
		$this->view->asegurados = $asegurado->getModel()->getTable()->findAll()->toArray();


		if( isset($params['asegurado_id']) || isset($params['agente_id'])){
			$this->view->asegurado_id=$params['asegurado_id'];
			$this->view->agente_id=$params['agente_id'];
			$this->view->compania_nombre = Domain_Compania::getNameById($params['compania_id']);
			
			$listado_deuda_compania = $this->_t_usuario->getListadoDeudaCompaniaByEntidadId($params['compania_id'],$params['agente_id'],$params['asegurado_id']);
		}else{
			$this->view->compania_nombre = Domain_Compania::getNameById($params['compania_id']);
			$listado_deuda_compania = $this->_t_usuario->getListadoDeudaCompania($params['compania_id']);
		}

		$this->view->listado_deuda_compania = $listado_deuda_compania;

	}
	
	public function imprimirListadoDeudaClienteAction(){

		/*
		 * Fecha de solicitud / Tomador / Domicilio / Ubicación Riesgo / Compañia
		 * / Tipo de cobertura / Tipo de seguro (aca tenemos que ver si hace falta agregar algo)
		 *  / Suma asegurada / Vigencia del seguro / Observaciones
		 */
		$params = $this->_request->getParams();
		//echo"<pre>";
		//print_r($params);
		//exit;
		$this->view->asegurado_id=$params['asegurado_id'];

		if( isset($params['compania_id']) || isset($params['agente_id'])){
			$this->view->asegurado_nombre = Domain_Asegurado::getNameById($params['asegurado_id']);
			$listado_deuda_cliente = $this->_t_usuario->getListadoDeudaClienteByEntidadId($params['asegurado_id'],$params['agente_id'],$params['compania_id']);
		}else{
			$this->view->asegurado_nombre = Domain_Asegurado::getNameById($params['asegurado_id']);
			$listado_deuda_cliente = $this->_t_usuario->getListadoDeudaCliente($params['asegurado_id']);
		}

		$this->view->listado_deuda_cliente = $listado_deuda_cliente;

	}

/* Este metodo no iria mas
 * Uso el de abajo
 */
	public function  imprimirListadoLibroOperacionesAction(){

		$params = $this->_request->getParams();
		
		$this->view->numero_orden = $params['numero_orden'];
		$this->view->productor_id=$params['productor_id'];
		
		$this->view->listado_libro_operaciones = $this->_t_usuario->getListadoOperacionesByProductorIdAndMonth($params['productor_id'],$params['mes'],$params['anio']);

	}
	
	public function pdfAction(){

		$params = $this->_request->getParams();
		$this->view->listado_libro_operaciones = $this->_t_usuario->getListadoOperacionesByProductorId($params['productor_id']);
		$this->view->numero_orden = $params['numero_orden'];
		//echo "<pre>";
		//print_r($params);

	}

	public function buscarAseguradoAction()
	{
		//$this->_helper->viewRenderer->setNoRender ();
		$solicitud = new Domain_Asegurado();

		$params = $this->_request->getParams();
		//echo "<pre>";
		//print_r($params);
		//Buscar es siempre true por ahora
		$this->view->buscar = true;


		/*if(isset($params['buscar'])){
			$rows =$this->_t_usuario->findAseguradoByNombre($params['nombre']);

			}else{
			$rows = $this->_t_usuario->getAsegurados();
			}*/
		$rows =$this->_t_usuario->findAseguradoByNombre($params['criterio']);

		$page=$this->_getParam('page',1);
			
		$paginator = Zend_Paginator::factory($rows);
		$paginator->setItemCountPerPage(10);
		$paginator->setCurrentPageNumber($page);
		$this->view->criterio = $params['criterio'];

		$this->view->rows = $paginator;

	}

	public function buscarCompaniaAction()
	{
		$params = $this->_request->getParams();
		
		//Buscar es siempre true por ahora
		$this->view->buscar = true;

		$rows =$this->_t_usuario->findCompaniaByNombre($params['criterio']);

		$page=$this->_getParam('page',1);
			
		$paginator = Zend_Paginator::factory($rows);
		$paginator->setItemCountPerPage(50);
		$paginator->setCurrentPageNumber($page);
		$this->view->criterio = $params['criterio'];

		$this->view->rows = $paginator;

	}
	

	public function listadoVencimientoAction()
	{

		$params = $this->_request->getParams();

		
		$cliente = new Domain_Cliente();
		$this->view->asegurados= $cliente->getModel()->getTable()->findAll()->toArray();

		$this->view->buscar = true;

		if( !empty($params['fecha_desde']) ) {
			$fecha_desde  = $params['fecha_desde'];
			$fecha_hasta = $params['fecha_hasta'];
		}else{
			//saco el mes en curso(despues lo mejoro, por ahora resta 15)
			$date_desde = new DateTime();
			$date_desde->sub(new DateInterval('P15D'));
			$fecha_desde =  $date_desde->format('Y-m-d');

			$date_hasta = new DateTime();
			$date_hasta->add(new DateInterval('P15D'));
			$fecha_hasta =  $date_hasta->format('Y-m-d');
		}

		$asegurado_id = ( !empty($params['asegurado_id']) )? $params['asegurado_id'] : null;
			
		$rows = $this->_t_usuario->getPolizasVencimiento($fecha_desde,$fecha_hasta,$asegurado_id);
		//$rows_cuota = $this->_t_usuario->getPolizasVencimientoCuotas($fecha_desde,$fecha_hasta,$asegurado_id);
		
		$this->view->rows = $rows;
	}

	public function imprimirListadoVencimientoAction()
	{

		$params = $this->_request->getParams();


		$cliente = new Domain_Cliente();
		$this->view->asegurados= $cliente->getModel()->getTable()->findAll()->toArray();

		$this->view->buscar = true;

		if( !empty($params['fecha_desde']) ) {
			$fecha_desde  = $params['fecha_desde'];
			$fecha_hasta = $params['fecha_hasta'];
		}else{
			//saco el mes en curso(despues lo mejoro, por ahora resta 15)
			$date_desde = new DateTime();
			$date_desde->sub(new DateInterval('P15D'));
			$fecha_desde =  $date_desde->format('Y-m-d');

			$date_hasta = new DateTime();
			$date_hasta->add(new DateInterval('P15D'));
			$fecha_hasta =  $date_hasta->format('Y-m-d');
		}


		$asegurado_id = ( !empty($params['asegurado_id']) )? $params['asegurado_id'] : null;
			
		$rows = $this->_t_usuario->getPolizasVencimiento($fecha_desde,$fecha_hasta,$asegurado_id);


		$this->view->fecha_desde = $fecha_desde;
		$this->view->fecha_hasta = $fecha_hasta;
		$this->view->asegurado_id =$asegurado_id;

		$this->view->rows = $rows;
	}


	public function listadoInformeCobranzasAction(){

		$params = $this->_request->getParams();

		$this->view->buscar = false;

		if($params['buscar']){
			$this->view->buscar = true;

			$listado_movimientos = $this->_t_usuario->getMovimientosByFecha($params['fecha_desde'],$params['fecha_hasta']);
			$informe_cobranzas = array();
			$informe_cobranzas_item = array();

				
			foreach ($listado_movimientos as $movimientos) {

				//No deberia haber un movimiento con poliza_id vacio

				$informe_cobranzas_item['fecha_registracion'] = $movimientos['fecha_pago'];
				$informe_cobranzas_item['concepto'] = '@TODO: de donde saco esto?';

				//1. Me fijo si es pago a compania o cobro a cliente
				//echo "tipo movimiento id:".$movimiento['tipo_movimiento_id']."<br>";
				switch ($movimientos['tipo_movimiento_id']) {
					case 0://DEUDA CLIENTE
							
						if(!empty($movimientos['asegurado_id'])){
							$d_cliente = new Domain_Asegurado($movimientos['asegurado_id']);
							$informe_cobranzas_item['entidad_aseguradora'] = $d_cliente->getModel()->nombre;
						}else{
							$informe_cobranzas_item['entidad_aseguradora'] ="S/N";
						}


						$importe_total = 0 ;
						
						$numeros_polizas = null;
						
						foreach ( $movimientos['Model_MovimientoPoliza'] as $movimiento){
							if(!empty($movimiento['poliza_id'])){
								//Aca puede ser en cuotas entonces el campo poliza_id es el id de la cuota
								//Hago esto para que se sepa que no es poliza_id sino el detalle de pago cuota
								$detalle_pago_id = $movimiento['poliza_id']; //Hago esto para que se sepa que no es poliza_id sino el detalle de pago cuota
								$s_poliza = Domain_Movimiento::getPolizaByDetallePagoId($detalle_pago_id);
								$d_poliza = new Domain_Poliza($s_poliza['poliza_id']);
								
							//Esto puede servir para otra tipo de informe
							//$valor_cuota = Domain_DetallePago::getValorCuotas($s_poliza['detalle_pago_id']);
								
								$premio_asegurado = floatval($d_poliza->getModelPolizaValores()->premio_asegurado);
								$cantidad_cuotas = Domain_DetallePago::getCantidadCuotas($detalle_pago_id);
								//echo "<pre>";
								//echo "Premio:";
								//print_r($premio_asegurado);
								//echo "Cuotas:";
								//print_r($cantidad_cuotas);
								/*$importe = $premio_asegurado + $plus;
								$importe_total = $importe_total + $importe;
								 */
								//$importe_total = $importe_total + $valor_cuota;
								$importe_total = $importe_total + ($premio_asegurado/$cantidad_cuotas);
								//$importe_asegurado = $premio_asegurado/$cantidad_cuotas;
								
								$numeros_polizas = $numeros_polizas." ".$d_poliza->getModelPoliza()->numero_poliza."/".$d_poliza->getModelPoliza()->endoso;
								$plus = floatval($d_poliza->getModelPolizaValores()->plus);
									
							}
						}
						//Me fijo si hay mas de una poliza para configurar el campo Polizas
							
					//	if(count($movimientos['Model_MovimientoPoliza']) > 1 ) $polizas_varias="Pol Varias:";

						//$informe_cobranzas_item['numero_poliza'] =$polizas_varias." ".$numeros_polizas;
						$informe_cobranzas_item['numero_poliza'] =$numeros_polizas;
						$informe_cobranzas_item['importe_egreso'] =  0 ;
						//$informe_cobranzas_item['importe_ingreso'] =$importe_total;
						$informe_cobranzas_item['importe_ingreso'] = $importe_total;
						
						break;

					case 1://PAGO COMPANIA

						if(!empty($movimientos['compania_id'])){
							$d_compania = new Domain_Compania($movimientos['compania_id']);
							$informe_cobranzas_item['entidad_aseguradora'] = $d_compania->getModel()->nombre;
						}else{
							$informe_cobranzas_item['entidad_aseguradora'] ="S/N";
						}
						
						$importe_total = 0;
						$numeros_polizas = null;
						foreach ( $movimientos['Model_MovimientoPoliza'] as $movimiento){
								
							if(!empty($movimiento['poliza_id'])){

								$d_poliza = new Domain_Poliza($movimiento['poliza_id']);
								$importe = floatval($d_poliza->getModelPolizaValores()->premio_compania);
								$importe_total = $importe_total + $importe;
								$numeros_polizas = $numeros_polizas." ".$d_poliza->getModelPoliza()->numero_poliza."/".$d_poliza->getModelPoliza()->endoso;
									
							}
						}
							
						//if(count($movimientos['Model_MovimientoPoliza']) > 1 ) $polizas_varias="Pol Varias:";


						//$informe_cobranzas_item['numero_poliza'] =$polizas_varias." ".$numeros_polizas;
						$informe_cobranzas_item['numero_poliza'] =$numeros_polizas;
						$informe_cobranzas_item['importe_egreso'] = $importe_total;
						$informe_cobranzas_item['importe_ingreso'] = 0 ;
							
						break;

					default:
						exit("Ocurrio un error llame a su administrador - Algun Movimiento no tiene tipo de moviento");
						break;
				}

				$informe_cobranzas[]=$informe_cobranzas_item;
			}

			$this->view->informe_cobranzas = $informe_cobranzas;
		}
	}
}
